<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/>
    </parent>

    <groupId>com.userhello</groupId>
    <artifactId>hello</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>hello</name>
    <description>Demo project for Spring Boot</description>

    <properties>
		<docker-maven-plugin-artifactId>docker-maven-plugin</docker-maven-plugin-artifactId>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    

	<repositories>
    <repository>
        <id>fabric8</id>
        <url>https://repo.fabric8.io/</url>
    </repository>
	</repositories>
	
    <dependencies>
        <!-- Spring Boot Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
		
		<dependency>
		    <groupId>jakarta.validation</groupId>
		    <artifactId>jakarta.validation-api</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>5.8.0</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

	    <dependency>
	        <groupId>org.pitest</groupId>
	        <artifactId>pitest</artifactId>
	        <version>1.14.4</version>
	        <scope>test</scope>
	    </dependency>
	
		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>5.8.0</version>
		    <scope>test</scope>
		</dependency>
			
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>junit-jupiter</artifactId>
		    <scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>postgresql</artifactId>
		    <scope>test</scope>
		</dependency>
		
		
		<dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
        </dependency>
        
        
        
        <dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>rest-assured</artifactId>
		    <version>5.4.0</version><!--$NO-MVN-MAN-VER$-->
		    <scope>test</scope>
		</dependency>
        <dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>json-path</artifactId>
		    <version>5.4.0</version><!--$NO-MVN-MAN-VER$-->
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>xml-path</artifactId>
		    <version>5.4.0</version><!--$NO-MVN-MAN-VER$-->
		    <scope>test</scope>
		</dependency>

 
        
        
        
    </dependencies>

    <build>

	<profiles>
        <profile>
            <id>skip-e2e-tests</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <skipITs>true</skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    	</profiles>
        <plugins>
                <!-- Plugin for Running Docker Automatically -->
			<plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.13</version>
            <configuration>
                <repository>hello-webapp</repository>
                <buildArgs>
                    <JAR_FILE>target/hello-0.0.1-SNAPSHOT.jar</JAR_FILE>
                </buildArgs>
            </configuration>
            <executions>
                <execution>
                    <id>build-image</id>
                    <phase>package</phase>
                    <goals>
                        <goal>build</goal>
                    </goals>
                </execution>
            </executions>
       		 </plugin>

			<plugin>
			  <groupId>io.fabric8</groupId>
			    <artifactId>docker-maven-plugin</artifactId>
			    <version>0.38.2</version>
			    <configuration>
			        <images>
			            <image>
			                <name>hello-webapp:latest</name>
			                <build>
			                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>
			                </build>
			            </image>
			        </images>
			    </configuration>
			</plugin>
        
        
            <!-- Plugin for Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/unit/**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Plugin for Integration and E2E Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.1.2</version><!--$NO-MVN-MAN-VER$-->
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/integrationTest/**/*.java</include>
                            </includes>
                        </configuration>
                    </execution>
        	<!-- E2E Tests -->
                    <execution>
                        <id>e2e-tests</id>
                        <phase>post-integration-test</phase> <!-- Run after IT tests -->
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                          <skipAfterFailure>true</skipAfterFailure>
                            <includes>
                                <include>**/e2eTest/**/*.java</include>
								<include>**/e2e/**/*.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

	        <plugin>
	            <groupId>org.pitest</groupId>
	            <artifactId>pitest-maven</artifactId>
	            <version>1.14.4</version>
	            <configuration>
	                <targetClasses>
	                    <param>com.userhello.hello.*</param>
	                </targetClasses>
	                <targetTests>
	                    <param>com.userhello.hello.unit.*</param>
	                    <param>com.userhello.hello.integration.*</param>
	                </targetTests>
	                <outputFormats>
	                    <param>XML</param>
	                    <param>HTML</param>
	                </outputFormats>
	            </configuration>
	        </plugin>


            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- JaCoCo for Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/HelloApplication.main(String[])</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-jar-plugin</artifactId>
	            <version>3.2.2</version><!--$NO-MVN-MAN-VER$-->
	            <configuration>
	                <archive>
	                    <manifest>
	                        <mainClass>com.userhello.hello.HelloApplication</mainClass>
	                    </manifest>
	                </archive>
	            </configuration>
	        </plugin>
	
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <executions>
	                <execution>
	                    <goals>
	                        <goal>repackage</goal>
	                    </goals>
	                </execution>
	            </executions>
				<configuration>
			        <mainClass>com.userhello.hello.HelloApplication</mainClass>
			    </configuration>
	        </plugin>
        </plugins>
    </build>
</project>
