name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

<<<<<<< HEAD
=======

>>>>>>> 8cb3266 (Updated E2E tests and project structure)
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
<<<<<<< HEAD

=======
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and run services
        run: docker-compose up -d --build
>>>>>>> 8cb3266 (Updated E2E tests and project structure)
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

<<<<<<< HEAD
      - name: Build with Maven
        run: mvn clean package

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
=======
      - uses: browser-actions/setup-chrome@latest
>>>>>>> 8cb3266 (Updated E2E tests and project structure)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and start containers
        run: docker-compose up -d --build
<<<<<<< HEAD
        # اینجا Docker Build انجام می‌شود، که حالا JAR موجود است
=======
>>>>>>> 8cb3266 (Updated E2E tests and project structure)

      - name: Wait for services to be ready
        run: |
          chmod +x ./monitor_and_test.sh
          ./monitor_and_test.sh

<<<<<<< HEAD
      - name: Run Tests (Skip E2E Tests)
=======
      - name: Build with Maven (Skip E2E Tests)
>>>>>>> 8cb3266 (Updated E2E tests and project structure)
        run: mvn clean verify -P skip-e2e-tests

      - name: Generate JaCoCo report
        run: mvn jacoco:report -P skip-e2e-tests

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
<<<<<<< HEAD
          verbose: true
=======
          verbose: true
>>>>>>> 8cb3266 (Updated E2E tests and project structure)
